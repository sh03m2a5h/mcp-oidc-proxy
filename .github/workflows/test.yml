name: CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'go/**'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'go/**'
      - '.github/workflows/test.yml'

defaults:
  run:
    working-directory: ./go

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22', '1.23']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make deps

      - name: Run tests
        run: make test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./go/coverage.out
          flags: unittests
          name: codecov-umbrella
        if: matrix.go-version == '1.23'

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.go-version }}
          path: go/coverage.out
          retention-days: 7

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: ./go
          args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.23-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.23-
            ${{ runner.os }}-go-

      - name: Build binary
        run: make build

      - name: Test binary
        run: ./bin/mcp-oidc-proxy --version

      - name: Build for multiple platforms
        run: make build-all

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: go/bin/
          retention-days: 30

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install requests sseclient-py

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: go/bin/

      - name: Make binary executable
        run: chmod +x go/bin/mcp-oidc-proxy

      - name: Install mcp-proxy
        run: pip install mcp-proxy

      - name: Run integration tests
        working-directory: ./tests/integration
        run: |
          # Setup test environment
          ./test-mcp-setup.sh &
          sleep 5
          
          # Start proxy in bypass mode
          ../../go/bin/mcp-oidc-proxy --config test-config.yaml &
          PROXY_PID=$!
          sleep 3
          
          # Run tests
          python3 test-mcp-client.py
          python3 test-mcp-message.py
          
          # Cleanup
          kill $PROXY_PID || true
          pkill -f mcp-proxy || true