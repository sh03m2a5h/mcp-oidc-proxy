version: '3'

services:
  openresty:
    image: openresty/openresty:1.21.4.1-alpine-fat
    container_name: mcp-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/lua:/etc/nginx/lua
      - ./data:/data
    command: >
      sh -c "apk add --no-cache git gcc libc-dev openssl-dev &&
             /usr/local/openresty/luajit/bin/luarocks install lua-resty-http &&
             /usr/local/openresty/luajit/bin/luarocks install lua-resty-session 3.10 &&
             /usr/local/openresty/luajit/bin/luarocks install lua-resty-openidc 1.7.6 &&
             echo 'upstream mcp_backend { server ${MCP_TARGET_HOST}:${MCP_TARGET_PORT}; }' > /etc/nginx/conf.d/upstream.conf && 
             openresty -g 'daemon off;'"
    env_file:
      - .env
    environment:
      - AUTH_MODE=${AUTH_MODE:-bypass}
      # Generic OIDC settings
      - OIDC_DISCOVERY_URL=${OIDC_DISCOVERY_URL:-}
      - OIDC_CLIENT_ID=${OIDC_CLIENT_ID:-}
      - OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET:-}
      - OIDC_SCOPE=${OIDC_SCOPE:-openid email profile}
      - OIDC_USE_PKCE=${OIDC_USE_PKCE:-true}
      # Legacy Auth0 support (will be converted to OIDC settings)
      - AUTH0_DOMAIN=${AUTH0_DOMAIN:-}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID:-}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET:-}
      # MCP target server
      - MCP_TARGET_HOST=${MCP_TARGET_HOST:-host.docker.internal}
      - MCP_TARGET_PORT=${MCP_TARGET_PORT:-3000}
      # Redis configuration
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
    networks:
      - mcp-network
    depends_on:
      - redis
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  redis:
    image: redis:alpine
    container_name: mcp-redis
    networks:
      - mcp-network
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes

networks:
  mcp-network:
    driver: bridge